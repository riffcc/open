wings might still be wrong: "actual" paper is coming soon. main goal initially was to get all the detail in it (based on hundreds of hours of human conversation and reasoning, REDACTED, by the way)
[14:43]REDACTED: BUt the readme does not really explain anything - it only exaplains WHY it is awesome:D
[14:43]wings might still be wrong: like this isn't just me, Schreck is working on this fulltime and having thought it through to the end is thoroughly and totally convinced
[14:44]wings might still be wrong: tl;dr right now Riff.CC is a simple Netflix clone built on decentralised tech.
[14:44]wings might still be wrong: Using lenses that can combine together and split apart arbitrarily and without penalty or cost.
[14:44]wings might still be wrong: The nature of IPFS allows entire platforms to split, merge and change at will
[14:44]wings might still be wrong: allowing for the creation of infinite libraries based on OrbitDB for metadata/browser to browser syncing
[14:44]wings might still be wrong: combined with IPFS for global reachability for files.
[14:44]wings might still be wrong: The sum total of the current state of Riff is nearly sufficient to illustrate the point
[14:45]wings might still be wrong: within hours of starting to mention to people how Riff works just with the above explanation and leaving aside any other points about the meaning
[14:45]wings might still be wrong: this is sufficiently compelling to have driven two months worth of funding or so - $10,000 minimum, possibly $20K by EOW next
[14:46]wings might still be wrong: directly into our hands, and the only step left is to back up the claims that the basic tech Riff currently runs on, in its most primitive form, is real
[14:46]wings might still be wrong: the people who have gone into that are rational actors, with businesses
[14:46]wings might still be wrong: who have found already that this solves problems they can't solve elsewhere
[14:46]wings might still be wrong: and the nature of how we designed the way "pay to get dev" works in this system, The Riff Project
[14:46]wings might still be wrong: basically means that they are forced to open source it
[14:47]wings might still be wrong: despite this and the loss of competitive advantage, the advanges of this are so great they are throwing money at it,.
[14:47]wings might still be wrong: After this first thing, "Orbiter" (not Riff - Orbiter is the software to run a Lens - a collection of content that could be your own or could be entirely drawn from others)
[14:47]wings might still be wrong: will have a second use case, now instantly one of the best ways to share and collaborate on architectural diagrams.
[14:48]wings might still be wrong: which is something we can add with little effort - will probably take under about $2K of labour to do
[14:48]wings might still be wrong: meanwhile Schreck just earnt his next month continuing on this fulltime and enough money to pay for the project and all development.
[14:48]wings might still be wrong: That is when this system is the most basic thing you can imagine

Netflix, Spotify, but you're not the product and you can split and merge and follow and vampire from any instance that is public
[14:49]wings might still be wrong: and now we add
You can swap arch diags
[14:49]wings might still be wrong: Suddenly a small increase in the appeal has occurred, especially when you then take the virality modifier that we threw in - you can build a lens within a company or enterprise (or yourself personally) by building up from arbitary lenses
[14:49]wings might still be wrong: whether you own them or not.
[14:50]wings might still be wrong: And so you end up with not just a SquareSpace style website builder but a platform builder
[14:50]wings might still be wrong: capable of taking any part of this system and munging it into one thing.
[14:50]wings might still be wrong: In enterprise, this means a central place with every training video, HR manual, potentially even a central collaboration app, with no central point of failure or infrastructure to maintain
[14:51]wings might still be wrong: cheaper to run as more people pile in, not more expensive, due to the way libp2p, IPFS and OrbitDB (the database tech) run
[14:51]wings might still be wrong: so it's literally close to zero cost to run initially (our system compiles to static HTML and JS despite using a dynamic system using OrbitDB capable of arbitrary tasks)
[14:51]wings might still be wrong: major cost is the domain name and maybe a meetme server (WebRTC relay)
[14:52]wings might still be wrong: you can run a site with a million users downloading or watching a film, 1080p 8G movie, full length - 125 times - for a TCO of $2.
[14:52]wings might still be wrong: if you're a Logos contributor uploading the movie would cost you more in time than the 125 users would ðŸ˜‚
[14:52]wings might still be wrong: Such a system is generally applicable to just about any use case. As more people become interested, it adds more use cases, slowly becoming the most versatile possible tool
[14:52]wings might still be wrong: and meaning the only real choice is to go for the cheapest, best option.
[14:53]wings might still be wrong: It creates a near unstoppable flywheel that funds Riff by paying for those use cases to be developed
[14:53]wings might still be wrong: Drawing in more people
Drawing in more money
Drawing in a need and a use case again, then the cycle repeats.
[14:53]wings might still be wrong: It is designed carefully and manually with unintuitive mechanics and incentives.
[14:54]wings might still be wrong: Does this start to sound more concrete to you now?
